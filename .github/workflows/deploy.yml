name: Deploy fatura personalizada front-

on:
  push:
    branches:
      - dev # Branch de destino para gerenciar releases

jobs:
  build_and_publish:
    runs-on: ubuntu-24.04
    permissions:
      contents: write # PermissÃ£o para o workflow criar tags

    steps:
      - uses: actions/checkout@v3

      - name: Config git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Instalar dependÃªncias
        run: npm install

      - name: Criar release com release-it
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Obter tag da release
        id: extract_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Construir e publicar imagem
        run: |
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.GH_PAT }} ghcr.io
          docker build -f ./infra/docker/Dockerfile.prod --build-arg SERVICE_VERSION=${{ env.TAG }} --build-arg VITE_API_URL=${{ secrets.VITE_API_URL }} --build-arg VITE_API_INTEGRACAO_URL=${{ secrets.VITE_API_INTEGRACAO_URL }} --tag fatura-personalizada-frontend:${{ env.TAG }}-prod .
          docker push fatura-personalizada-frontend:${{ env.TAG }}-prod

      - name: Criar kubeconfig
        run: |
          mkdir -p "${HOME}/.kube"
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > "${HOME}/.kube/config"
          cat "${HOME}/.kube/config"

      - name: Usar contexto do cluster
        run: |
          kubectl config use-context ${{ secrets.CLUSTER }}

      - name: ðŸš€ Substituir variÃ¡veis no deployment.yml e aplicar no cluster
        run: |
          envsubst < infra/kubernetes/deployment.yaml | kubectl apply -f -

        env:
          IMAGE_TAG: ${{ env.TAG }}
